name: Coding Standards

on:
  # Run on all pushes for default branch and on all pull requests.
  # Prevent the build from running when there are only irrelevant changes.
  push:
    branches:
      - master
    paths:
      - "**.php"
      - "**.js"
      - "**.css"
      - "**.scss"
      - "**.yml"
      - "package.json"
  pull_request:
    paths:
      - "**.php"
      - "**.js"
      - "**.css"
      - "**.scss"
      - "**.yml"
      - "package.json"
  # Allow manually triggering the workflow.
  workflow_dispatch:

# Cancel previous workflow run groups that have not completed.
concurrency:
  # Group workflow runs by workflow name, along with the head branch ref of the pull request
  # or otherwise the branch or tag ref.
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  lint-assets:
    name: "Lint: CSS & JS"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm Store Directory
        id: pnpm-cache
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm Cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        run: pnpm install

      - name: Detect coding standard violations (stylelint)
        run: pnpm run lint:css

      - name: Detect coding standard violations (eslint)
        run: pnpm run lint:js

  lint-php:
    name: "Lint: PHP"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "7.4"
          coverage: none
          tools: cs2pr

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Configure Composer cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --optimize-autoloader --no-progress --no-interaction

      - name: Detect coding standard violations (PHPCS)
        run: vendor/bin/phpcs -q --report=checkstyle --runtime-set ignore_errors_on_exit 1 --runtime-set ignore_warnings_on_exit 1 | cs2pr --graceful-warnings
